/// <reference types="node" />
import { Writable, Readable } from "stream";
export interface TestSuite {
    name: string;
    thresholds: Threshold[];
    startTime?: number;
    endTime?: number;
    stdout?: string;
}
export interface Threshold {
    name: string;
    passed: boolean;
    systemOut: string;
}
export declare function parseLine(line: string): Threshold | null;
export declare function parseName(line: string): string | null;
/**
 * https://llg.cubic.org/docs/junit/
 * https://dzone.com/articles/viewing-junit-xml-files-locally
 *
 */
export declare function toXml(testsuites: TestSuite[], stream?: Writable): string;
export declare class K6Parser {
    private _testSuites;
    parse(input: string, options?: {
        name?: string;
        startTime?: number;
        endTime?: number;
    }): Promise<void>;
    pipeFrom(input: Readable, options?: {
        name?: string;
        startTime?: number;
        endTime?: number;
        output?: Writable;
    }): Promise<void>;
    getTestSuites(): TestSuite[];
    allPassed(): boolean;
    toXml(stream?: Writable): string;
}
export default K6Parser;
